# mac & vim
-----

## install
----
* 安装xcode, 可以从app store下载, 或者其他随便什么地方. 如果你舍不得2G的硬盘空间来安装这个貌似没什么用的东西, **请按<cmd+w>**. 
* 安装command line tools. 启动xcode, Xcode菜单-> perferences选项->Download页->点击“command line tool”后面的install. 
* 安装[homebrew](http://mxcl.github.com/homebrew/)(macport据说已经过时了). homebrew是mac上的包管理工具, 类似于yum, apt. 安装过程中如果遇到问题请[猛击](http://www.google.com). 
* 安装git

        brew install git
* 安装vim

        brew install https://raw.github.com/Homebrew/homebrew-dupes/master/vim.rb
> os x 10.8 自带的vim已经支持python interface,不需要重新安装.

    Macvim不支持python插件, 而我选的snip插件是python写的, 所以需要重新安装一个有+python支持的vim. 如果你使用snipMate则不需要重新安装vim. 
    安装完成后, 建议将新安装的vim加入bash path里方便使用.
* 安装[Bunble](https://github.com/gmarik/vundle), the plug-in manager for Vim:

        git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle

## config
---
* 将如下配置添加到你的vimrc里

```
        set nocompatible               " be iMproved
        filetype off                   " required!
        
        set rtp+=~/.vim/bundle/vundle/
        call vundle#rc()
        
        " let Vundle manage Vundle
        " required! 
        Bundle 'gmarik/vundle'
        
        " My Bundles here:
        "
        " original repos on github
        Bundle 'ervandew/supertab'
        
        " vim-scripts repos
        Bundle 'UltiSnips'
        " non github repos
        "Bundle 'git://git.wincent.com/command-t.git'
        " ...
        
        filetype plugin indent on     " required!
        "
        " Brief help
        " :BundleList          - list configured bundles
        " :BundleInstall(!)    - install(update) bundles
        " :BundleSearch(!) foo - search(or refresh cache first) for foo
        " :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
        "
        " see :h vundle for more details or wiki for FAQ
        " NOTE: comments after Bundle command are not allowed..
        " supertab
        let g:SuperTabDefaultCompletionType = "context"
        let g:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']
        let g:SuperTabDefaultCompletionType = '<c-n>'
        
        " UltiSnips
        let g:UltiSnipsExpandTrigger="<tab>"
        let g:UltiSnipsJumpForwardTrigger="<tab>"
        let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
        let g:UltiSnipsDontReverseSearchPath="1"
        let g:UltiSnipsSnippetDirectories = ["snips", "UltiSnips"]
        
        
        " Global configurations
        syntax on
        
        set colorcolumn=+1        " highlight column after 'textwidth'
        set textwidth=80
        highlight ColorColumn ctermbg=lightgrey guibg=lightgrey
```

* 进入vim, 执行如下命令：

        :BundleInstal
    然后，**等着……**Vundle正在帮你安装插件。  
    完成后退出。到此mac上的vim环境部署完成。

## 插件功能说明
----
* Supertab, a plugin which allows you to perform all your insert completion    
(ins-completion) using the tab key.  
简单说就是可以让你用Tab完成各种自动补全.
* Ultisnips, provide a snippets solution that users came to expect from   
editors.  
提供textMate类似的Bundle功能, 强大的扩展性.
> 这两个插件绝对NB, 建议看下文档，vim中可以`:help supertab`, `:help UltiSnips`

## PS
----
* textMate中还有一些Bundle是用来调用外部命令的, vim这方面不弱, 例如:

        map <F5> :!node %<CR>
    将这条命令加入`.vim/indent/javascript.vim`后, 再编辑js文件可以按`<F5>`执行当前文件的js代码，**不用vim<->终端手动切了**  
    
    我的`.vim/indent/javascript.vim`, 仅供参考：

        set tabstop=4
        set cindent shiftwidth=4
        set autoindent shiftwidth=4
        set expandtab
        map <F5> :!node %<CR>
* 你可以将`.vim`放到dropbox里保存。也可以在github.com上开个项目专门放自己的.vim文件(很多人都这么干).
    
----
Powered by [**Mou**,The missing **Markdown** editor for web developers](http://mouapp.com/)
